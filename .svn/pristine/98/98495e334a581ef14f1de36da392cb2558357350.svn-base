package com.sapient.equitytradingapp.et.jms;

import java.io.StringWriter;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.ObjectMessage;
import javax.jms.Session;
import javax.jms.Destination;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.jms.core.MessageCreator;
import org.springframework.stereotype.Component;

@Component
public class ETSender {

	@Autowired
	protected JmsTemplate jmsTemplate;

	public JmsTemplate getJmsTemplate() {
		return jmsTemplate;
	}

	public void setJmsTemplate(JmsTemplate jmsTemplate) {
		this.jmsTemplate = jmsTemplate;
	}

	/*public void sendBlockOrder(StringWriter stringWriter) {
		final String buffer = new String(stringWriter.toString());
		jmsTemplate.send(this.queue, new MessageCreator() {
			public Message createMessage(Session session) throws JMSException {
				ObjectMessage objMessage = session.createObjectMessage();
				objMessage.setObject(buffer);
				return objMessage;
			}
		});

	}*/

	public void sendBlockOrder(Destination destination, StringWriter stringWriter) {
		final String buffer = new String(stringWriter.toString());
		jmsTemplate.send(destination, new MessageCreator() {
			public Message createMessage(Session session) throws JMSException {
				ObjectMessage objMessage = session.createObjectMessage();
				objMessage.setObjectProperty("ETMessage", buffer);
				return objMessage;

			}
		});

	}

	/*
	 * try { InitialContext context = new InitialContext(); factory =
	 * (QueueConnectionFactory) context .lookup("QueueConnectionFactory"); Queue
	 * queue = (Queue) context.lookup("dynamicQueues/testQ");
	 * 
	 * QueueConnection con = factory.createQueueConnection(); QueueSession
	 * session = con.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
	 * QueueSender sender = session.createSender(queue);
	 * 
	 * for (int i = 0; i < 1; i++) { ObjectMessage objMessage =
	 * session.createObjectMessage(); objMessage.setObject((Serializable)
	 * stringWriter); sender.send(objMessage); }
	 * 
	 * } catch (NamingException e) { e.printStackTrace(); } catch (JMSException
	 * e) { e.printStackTrace(); }
	 */

}
