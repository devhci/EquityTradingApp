package com.sapient.equitytradingapp.et.actions;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.factory.annotation.Autowired;

import com.opensymphony.xwork2.ActionSupport;
import com.sapient.equitytradingapp.et.service.CreateBlockOrderService;
import com.sapient.equitytradingapp.pm.constant.StringLiterals;

@Action(value = "CreateBlockOrder")
@Results({ @Result(name = "success", location = "orders", type = "chain"),
		@Result(name = "input", location = "orders", type = "chain"),
		@Result(location = "Error.jsp", name = "exception") })
public class CreateBlockOrderAction extends ActionSupport {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Autowired
	private CreateBlockOrderService createBlockOrderService;
	private List<Long> orderIdList = new ArrayList<Long>();

	public List<Long> getOrderIdList() {
		return orderIdList;
	}

	public void setOrderIdList(List<Long> orderIdList) {
		this.orderIdList = orderIdList;
	}

	public String execute() {
		try {
			if (orderIdList == null || orderIdList.size() == 0) {
				HttpServletRequest request = ServletActionContext.getRequest();
				request.setAttribute("message1",
						"Please select atleast one order");
				return StringLiterals.INPUT;
			}
			if (createBlockOrderService.createBlocks(orderIdList)) {
				return StringLiterals.SUCCESS;
			} else if (!createBlockOrderService.createBlocks(orderIdList)) {
				HttpServletRequest request = ServletActionContext.getRequest();
				request.setAttribute("message",
						"Please select orders with the same Side, Symbol, Qualifier and OrderType");
				return StringLiterals.INPUT;
			} else {
				return StringLiterals.EXCEPTION;
			}
		} catch (Exception e) {
			return StringLiterals.EXCEPTION;
		}
	}
}
